local AuthStrings = {
    "PKk6PnI8SU9f23lMKuKWy29ThZG1vhzj",
    "azUBJIPPzyQWgFxoZhWoGAL27cgRQFAx",
    "aECBqb5B7bZfEtXn0RTAFbnijLcoNAAC",
    "blbfQ3drs5Gla535UPDDixezQmO8NPrP",
    "QP8cyQUU2kZw6kdnlM4T0ks1a86ulnPg",
    "MUHVNXjmJ1CHGl0qeKrgILkXtJRcsUlQ",
    "W0qhqplKLHcR95Y42tQZfisWqAUCfJUo",
    "5cg2oAIFmqS6xRjmRUQPiEbpyur5bTLi",
    "mkbXUlrqIQ5WpR7WKkY0fawc8jUFUMao",
    "WtAhFLltl9AUXC5qEUFGsujKc1CNB0ku",
    "VnYV3CwDJbGBp1SFaJe1FDjGAXIIumu5",
    "CpILPydb2yjadpDRymtt3sEeWqHyLhod",
    "hJq1Auy6PR0c1bHiuY622gvNI8VjZsCB",
    "UIlCfhlEM8l6wJbR0OVKHj6fWMfbpyTO",
    "EPlr5VEnHZKgTutgyQQXhjx86iwLZZ0k",
    "fLMIcat5iEvzlS46RPifYTeZlc1LxzzN",
    "TwAYMIxx6xFC0MTe3A33SmURCqMGYXWp",
    "0zCICvTsXCBDgLowg9sDyTabzYpx748R",
    "Pzb9yJlv9zx1cNsBEVAuE9NQaOLAaWKw",
    "2HuHmIrAgEPeG8Fi7jcnIgumOq5pvOJL",
    "3vvjjYtbxVLX8ifTDXONRtCloUcJYSef",
    "4JMG6RJ5TWx9H8y8dH9TghFJNDpm0YbH",
    "yk1SGhxd3azVmBonjlKsRCvKpOhUijyu",
    "UvmYRbp2FaMhnZDJmAjd5fTjX2WRw7jf",
    "oEz7gOOYcZoVx7nDZUTjzeYyC1sjXaYx",
    "f7gVtzhU0FOWSDZGITZMEzW3ellNh05h",
    "Ye7Lng8ty42CqTqN2dcnBLmCZ64FNk9x",
    "YUBi86DMQfIihT0DYw1wthwykFk6Fko0",
    "e7PP6BdcrUzkNQLyEC5zqZsnyLXHnQfK",
    "wLOwoEkHRIfoZB9jyxw0LRbGLrwI92QD",
    "o7ztSStJFGa4z0x4gLD3iBjQ9ac1eEpi",
    "dUbuVFy6EpK1co8ZbpKfutez92SIsaSi",
    "iGUpmmQiqoCMqA4bceFQQxv0ZUWn1Crf",
    "rKvtHr92TEuYciricy5VxMgDCXAkItB5",
    "rf5ijFYC2k9oP8EXkyCSJtdy9wJeczOJ",
    "VBsQsSTHEP6g8qhyv29UIy97xAdDulea",
    "PWoHNybHOgWRhfNE8Iji8RErXxTJZa2Y",
    "qUv7WZWEgGz7MbSkj2c6A8jjWLIzOz0R",
    "aCVLHtUfvGGiNTyNTkhOcfroCxGiPFai",
    "tmDKyUO5JiTKSHPRGzlVhdVEITncfXyw",
    "t4sxw1Axf2UTFXWhIynK7KOff2pPhmEF",
    "5zmMx75mxsQq1qrxcHvpDjJgm2GVw9Ip",
    "XSLaqVeJoHNZBro7RuzcXBU5WPJDw99h",
    "hw1zQtChYTMJH2FQd8pR7uGqDZmxucv7",
    "fzZYY7nE4kPufcXI6JIKidlPkve05KHe",
    "PZClLl7CGhUXCpJKfLVEHH4X4rCv6LN2",
    "RTch5ym9K21WE50y7u4sWWY1tqjY1vTE",
    "YZZqdfUL8DfUYqeThPEs39F79ZgIUB4f",
    "9PlrIK2bTJ7pnC7DrTgNPiBqIzCPb5WB",
    "TNwlMeMltqn5IOnoNDRSPWRb7Ztike0o"
}

while not game:IsLoaded() do task.wait() end
   local Players = game:GetService("Players")
   local Me = Players.LocalPlayer
   local sock
   if WebSocket then
      sock = WebSocket.connect(getgenv().Server)
      sock.OnClose:Connect(function()
      sock = WebSocket.connect(getgenv().Server)
      end)
   elseif WebsocketClient then
      sock = WebsocketClient.new(getgenv().Server)
      sock:Connect()
      sock.ConnectionClosed:Connect(function()
      sock = WebsocketClient.new(getgenv().Server)
      sock:Connect()
      end)
   else
      sock = syn.websocket.connect(getgenv().Server)
      sock.OnClose:Connect(function()
      sock = syn.websocket.connect(getgenv().Server)
      end)
   end

   function stringtocolor(str)
      return Color3.new(table.unpack(str:gsub(" ",""):split(",")))
   end

   repeat task.wait() until Me.Character
      repeat task.wait() until Me.Character:FindFirstChild("Head")
         Me.Character.Head:WaitForChild("NameGui")
         pcall(function()Me.Character.Head:FindFirstChild("NameGui").Frame.RoleSlot:Destroy()end)
         local ExploiterGui = Me.Character.Head:FindFirstChild("NameGui"):Clone()
         ExploiterGui.Parent = Me.Character.Head:FindFirstChild("NameGui").Parent
         ExploiterGui.Name = "ExploiterGui"
         ExploiterGui.StudsOffset = Vector3.new(0, 1.9, 0)
         ExploiterGui.Frame.NameSlot.Text = getgenv().MyName
         ExploiterGui.Frame.NameSlot.TextColor3 = getgenv().MyColor
         ExploiterGui.Frame.NameSlot.TextStrokeColor3 = getgenv().MyStroke
         ExploiterGui.Frame.NameSlot.RichText = getgenv().RichText
         if table.find(AuthStrings, getgenv().PrivateKey) then
            task.wait(1)
            local VerifiedGui = ExploiterGui:Clone()
            VerifiedGui.Parent = ExploiterGui.Parent
            VerifiedGui.Name = "VerifiedGui"
            VerifiedGui.StudsOffset = Vector3.new(0, 1.2, 0)
            VerifiedGui.Frame.NameSlot.Size = UDim2.new(1, 0, 0.170000002, 0)
            VerifiedGui.Frame.NameSlot.Text = "Original"
            VerifiedGui.Frame.NameSlot.TextColor3 = Color3.new(1,0,0)
            VerifiedGui.Frame.NameSlot.TextStrokeColor3 = Color3.new(0,0,0)
VerifiedGui.AlwaysOnTop = true
         end

         sock:Send(Me.Name..":"..getgenv().MyName..":"..tostring(getgenv().MyColor)..":"..tostring(getgenv().MyStroke)..":"..tostring(getgenv().PrivateKey)..":"..tostring(getgenv().RichText)..":Joined")

         Me.CharacterAdded:Connect(function()
         repeat task.wait() until Me.Character:FindFirstChild("Head")
            Me.Character.Head:WaitForChild("NameGui")
            pcall(function()Me.Character.Head:FindFirstChild("NameGui").Frame.RoleSlot:Destroy()end)
            if not Me.Character.Head:FindFirstChild("ExploiterGui") then
               local ExploiterGui = Me.Character.Head:FindFirstChild("NameGui"):Clone()
               ExploiterGui.Parent = Me.Character.Head:FindFirstChild("NameGui").Parent
               ExploiterGui.Name = "ExploiterGui"
               ExploiterGui.StudsOffset = Vector3.new(0, 1.9, 0)
               ExploiterGui.Frame.NameSlot.Text = getgenv().MyName
               ExploiterGui.Frame.NameSlot.TextColor3 = getgenv().MyColor
               ExploiterGui.Frame.NameSlot.TextStrokeColor3 = getgenv().MyStroke
               ExploiterGui.Frame.NameSlot.RichText = getgenv().RichText
               if table.find(AuthStrings, getgenv().PrivateKey) then
                  task.wait(1)
                  local VerifiedGui = ExploiterGui:Clone()
                  VerifiedGui.Parent = ExploiterGui.Parent
                  VerifiedGui.Name = "VerifiedGui"
                  VerifiedGui.StudsOffset = Vector3.new(0, 1.2, 0)
                  VerifiedGui.Frame.NameSlot.Size = UDim2.new(1, 0, 0.170000002, 0)
                  VerifiedGui.Frame.NameSlot.Text = "Original"
                  VerifiedGui.Frame.NameSlot.TextColor3 = Color3.new(1,0,0)
                  VerifiedGui.Frame.NameSlot.TextStrokeColor3 = Color3.new(0,0,0)
VerifiedGui.AlwaysOnTop = true
               end
               sock:Send(Me.Name..":"..getgenv().MyName..":"..tostring(getgenv().MyColor)..":"..tostring(getgenv().MyStroke)..":"..tostring(getgenv().PrivateKey)..":"..tostring(getgenv().RichText))
            end
            end)
            if WebsocketClient then
               sock.DataReceived:Connect(function(data)
               local data = data:split(":")
               if Players:FindFirstChild(data[1]) then
                  if data[1] ~= Me.Name then
                     repeat task.wait() until Players:FindFirstChild(data[1]).Character
                        repeat task.wait() until Players:FindFirstChild(data[1]).Character:FindFirstChild("Head")
                           repeat task.wait() until Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui")
                              if not Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("ExploiterGui") then
                                 pcall(function()Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui").Frame.RoleSlot:Destroy()end)
                                 local ExploiterGui = Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui"):Clone()
                                 ExploiterGui.Parent = Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui").Parent
                                 ExploiterGui.Name = "ExploiterGui"
                                 ExploiterGui.StudsOffset = Vector3.new(0,1.9,0)
                                 ExploiterGui.Frame.NameSlot.Text = data[2]
                                 ExploiterGui.Frame.NameSlot.TextColor3 = stringtocolor(data[3])
                                 ExploiterGui.Frame.NameSlot.TextStrokeColor3 = stringtocolor(data[4])
                                 if table.find(AuthStrings, data[5]) then
                                    task.wait(1)
                                    local VerifiedGui = ExploiterGui:Clone()
                                    VerifiedGui.Parent = ExploiterGui.Parent
                                    VerifiedGui.Name = "VerifiedGui"
                                    VerifiedGui.StudsOffset = Vector3.new(0, 1.2, 0)
                                    VerifiedGui.Frame.NameSlot.Size = UDim2.new(1, 0, 0.170000002, 0)
                                    VerifiedGui.Frame.NameSlot.Text = "Original"
                                    VerifiedGui.Frame.NameSlot.TextColor3 = Color3.new(1,0,0)
                                    VerifiedGui.Frame.NameSlot.TextStrokeColor3 = Color3.new(0,0,0)
VerifiedGui.AlwaysOnTop = true
                                 end
                                 if data[6] == "true" then
                                    ExploiterGui.Frame.NameSlot.RichText = data[6]
                                 end
                                 if data[7] then
                                    sock:Send(Me.Name..":"..getgenv().MyName..":"..tostring(getgenv().MyColor)..":"..tostring(getgenv().MyStroke)..":"..tostring(getgenv().PrivateKey)..":"..tostring(getgenv().RichText))
                                 end
                              end
                           end
                        end
                        end)
                     else
                        sock.OnMessage:Connect(function(data)
				local data = data:split(":")
                        if Players:FindFirstChild(data[1]) then
                           if data[1] ~= Me.Name then
                              repeat task.wait() until Players:FindFirstChild(data[1]).Character
                                 repeat task.wait() until Players:FindFirstChild(data[1]).Character:FindFirstChild("Head")
                                    repeat task.wait() until Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui")
                                       if not Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("ExploiterGui") then
                                          pcall(function()Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui").Frame.RoleSlot:Destroy()end)
                                          local ExploiterGui = Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui"):Clone()
                                          ExploiterGui.Parent = Players:FindFirstChild(data[1]).Character.Head:FindFirstChild("NameGui").Parent
                                          ExploiterGui.Name = "ExploiterGui"
                                          ExploiterGui.StudsOffset = Vector3.new(0,1.9,0)
                                          ExploiterGui.Frame.NameSlot.Text = data[2]
                                          ExploiterGui.Frame.NameSlot.TextColor3 = stringtocolor(data[3])
                                          ExploiterGui.Frame.NameSlot.TextStrokeColor3 = stringtocolor(data[4])
                                          if table.find(AuthStrings, data[5]) then
                                             task.wait(1)
                                             local VerifiedGui = ExploiterGui:Clone()
                                             VerifiedGui.Parent = ExploiterGui.Parent
                                             VerifiedGui.Name = "VerifiedGui"
                                             VerifiedGui.StudsOffset = Vector3.new(0, 1.2, 0)
                                             VerifiedGui.Frame.NameSlot.Size = UDim2.new(1, 0, 0.170000002, 0)
                                             VerifiedGui.Frame.NameSlot.Text = "Original"
                                             VerifiedGui.Frame.NameSlot.TextColor3 = Color3.new(1,0,0)
                                             VerifiedGui.Frame.NameSlot.TextStrokeColor3 = Color3.new(0,0,0)
VerifiedGui.AlwaysOnTop = true
							else
							print("not here")
                                          end
                                          if data[6] == "true" then
                                             ExploiterGui.Frame.NameSlot.RichText = data[6]
                                          end
                                          if data[7] then
                                             sock:Send(Me.Name..":"..getgenv().MyName..":"..tostring(getgenv().MyColor)..":"..tostring(getgenv().MyStroke)..":"..tostring(getgenv().PrivateKey)..":"..tostring(getgenv().RichText))
                                          end
                                       end
                                    end
                                 end
                                 end)
                              end
