-- This file was generated using Luraph Obfuscator v13.5.9

return(function(uW,YW,NW,vW,RW,qW,HW,kW,yW,GW,sW,tW,rW,fW,QW,IW,PW,BW,OW,oW,nW,WW,dW,ZW,AW,FW,mW,DW,UW,hW,aW,eW,lW,EW,LW,KW,zW,VW,JW,MW,C,...)local j,w,cW,L,i,O,v,wW,T,b,A=EW,nW,0x7,nil,nil,nil,nil,nil,nil,nil,nil;while cW<=0X7 do if not(cW<=0X0003)then if not(cW<=5)then if cW==0X0006 then do A=OW.gsub;end;cW=8;else L={2,5,0X03};cW=0X4;end;else if cW==4 then do i=AW;end;cW=0x0000;else v={[0]=ZW};cW=2;end;end;elseif not(cW<=1)then if cW==2 then do wW=function(...)return j("#",...),{...};end;end;cW=3;else T=OW.sub;cW=1;end;else do if cW~=0x0 then b=string.char;cW=0X006;else do O=eW;end;do cW=0X5;end;end;end;end;end;cW=2;local g,q,E=nil,nil,(nil);repeat if not(cW<=0)then if cW==0x001 then q=1;cW=0X0;else g=aW;do cW=1;end;end;else E=string.rep;cW=3;end;until cW>=3;cW=0X001;local Z,H=nil,nil;while cW<=1 do if cW==0 then H=0X00100000000;cW=2;else Z=GW.insert;cW=0X0;end;end;local G=sW;local a=rawget;local m=(IW or JW);cW=1;local e,s=nil,(nil);repeat if cW~=0 then e=mW;cW=0X0;else s=zW;break;end;until false;local t=(getfenv);cW=1;local J=nil;do while cW<0X2 do if cW==0 then cW=0x2;else J=coroutine.yield;do cW=0X0;end;end;end;end;local p,z=error,(setfenv);local x=tW;local k=(t and t()or kW);local Y,M={[0]={[0X0]=0X00,1,2,3,qW,5,6,0X007,8,9,0XA,11,0Xc,13,14,0x0000f},{[0x0]=1,0,3,0X2,5,4,FW,6,yW,8,11,0X0A,13,12,15,0Xe},{[0X0]=2,PW,0,1,6,7,0X4,0X0005,10,11,0X8,9,0X0E,0x000F,0XC,0X0d},{[0]=0X00003,2,0x1,dW,0X7,6,5,4,0X000b,0Xa,0X09,8,QW,0X00e,13,12},{[0X0]=4,5,0x0006,7,0,1,0x2,0x3,12,HW,14,QW,8,0X9,WW,11},{[0X00000]=5,0x4,0X7,MW,1,0x0,3,2,13,0XC,15,0xe,yW,0X8,0X0000B,10},{[0]=6,7,4,0X5,0x2,PW,0,1,0X000E,15,0X000C,0XD,WW,0Xb,8,9},{[0X000]=0X7,0X00006,0x5,4,PW,2,0X1,0X0000,15,0XE,0xd,0X000c,uW,0Xa,0X9,8},{[0X0]=8,9,10,11,0XC,0Xd,vW,QW,0X0,1,2,0X3,qW,5,MW,0X7},{[dW]=yW,8,0xB,10,13,12,0X0000f,14,0X0001,0,0X3,2,0X00005,4,0x0007,0x06},{[0X0]=10,0XB,0X0008,9,14,15,UW,0Xd,0X2,3,0x0,ZW,6,0x7,4,5},{[0]=11,0XA,9,8,0X0000F,14,0xd,12,3,0x02,1,0,7,0x0006,5,4},{[0X0]=12,13,14,0XF,8,yW,0XA,0xB,0x00004,0X5,6,7,0,1,0X002,0X3},{[0]=HW,UW,QW,14,yW,0x00008,uW,0X0000a,0X00005,4,0X00007,0X6,0x1,0x0,0x00003,0X00002},{[0x0]=14,0X00f,0Xc,13,10,0X0B,0X8,0x9,6,7,4,5,2,3,0,1},{[0X0]=0Xf,vW,0Xd,0Xc,11,0X0a,0X00009,0X8,0X7,6,5,0X0004,3,0X2,1,0}},(H-ZW);cW=3;local F,y,P=nil,nil,nil;while cW<4 do if not(cW<=0X1)then if cW==2 then P=function()local Sl=nil;for z4=0,0x2 do do if z4<=0 then Sl=x(F,q,q);else if z4==1 then q=q+1;else return Sl;end;end;end;end;end;cW=4;else do F="LPH}end;cW=1;end;elseif cW~=0 then cW=0X0;else F=A(T(F,0x00005),'\046.',function(GF)if x(GF,oW)~=0X48 then local oR=b(g(GF,0x000010));if not(y)then return oR;else local Pv,Dv=2,(nil);while(true)do if not(Pv<=0)then do if Pv==0X1 then do return Dv;end;else do Dv=E(oR,y);end;Pv=0x0;end;end;else do y=nil;end;Pv=0X0001;end;end;end;else local bh=(1);repeat if bh~=0 then y=g(T(GF,0x1,ZW));do bh=0X0;end;else return"";end;until(false);end;end);cW=0X00002;end;end;local Q,W,u=nil,nil,nil;for k0=0X0,0X2 do if k0<=0 then Q=0X080000000;else if k0~=1 then u=Q-ZW;else do W=oW^0X34;end;end;end;end;local X=type;local XW=({});do local he=(nil);local qe=1;while true do if qe~=0x00000 then do he=2;end;qe=0X0;else for Xf=1,31 do local Ef=0;while Ef~=0X02 do if Ef==0 then v[Xf]=he;Ef=1;else he=he*oW;do Ef=0X2;end;end;end;end;break;end;end;end;local d,o,U,D,K=nil,nil,nil,nil,nil;for ii=0,0X4 do do if ii<=0X01 then if ii~=0 then o=function()local iI,pI=nil,nil;for pn=0X0000,2 do do if pn<=0 then iI,pI=d(),d();else if pn~=0X1 then do return pI*H+iI;end;else if not(pI>=Q)then else pI=pI-H;end;end;end;end;end;end;else d=function()local CD,SD,fD,xD=x(F,q,q+0x003);local cD=(0x01);do while true do do if cD==0x00000 then do return xD*0X0001000000+fD*0x10000+SD*256+CD;end;else q=q+4;cD=0X0;end;end;end;end;end;end;else do if not(ii<=2)then do if ii==3 then D=function()local aX,EX=nil,(nil);for Kt=0,1 do if Kt~=0 then EX=d();else aX=d();end;end;if not(aX==0 and EX==0)then else return 0x0;end;local FX=(-0x001)^U(EX,0x00001f,0X1);local YX=U(EX,0X0014,11);local uX=(0X1);local sX=U(EX,0,0x14)*H+aX;do if YX==0X00 then if sX==0 then return FX*0X0;else local VC=(0X0);do while VC<0X2 do if VC~=0 then uX=0;do VC=2;end;else YX=0X1;VC=1;end;end;end;end;else if YX==DW then if sX==0 then do return FX*(0/0X0);end;else return FX*(ZW/0);end;end;end;end;return FX*(2^(YX-1023))*(sX/W+uX);end;else K=(YW or KW);end;end;else U=function(PT,BT,JT)local eT=(PT/v[BT])%v[JT];eT=eT-eT%0x00001;return eT;end;end;end;end;end;end;local l=K and K.bxor or function(ph,mh)local vh,Zh=nil,(nil);do for kJ=0,0X5 do do if not(kJ<=2)then if kJ<=3 then do Zh=0;end;else do if kJ==0X4 then while ph>0X0 and mh>0 do local hz,Wz=nil,nil;for DV=0,2 do if not(DV<=0)then if DV==0X1 then Wz=mh%16;else do Zh=Zh+Y[hz][Wz]*vh;end;end;else hz=ph%lW;end;end;local fz=0x0;repeat if fz<=0 then ph=(ph-hz)/16;fz=2;else if fz==1 then vh=vh*0X000010;fz=3;else do mh=(mh-Wz)/0x00010;end;do fz=0X1;end;end;end;until fz>2;end;else return Zh+ph*vh+mh*vh;end;end;end;else do if kJ<=0 then ph=ph%H;elseif kJ~=1 then mh=mh%H;else vh=0X1;end;end;end;end;end;end;end;local B=K and K[BW]or function(HQ,kQ)do for Ut=0,2 do do if Ut<=0 then HQ=HQ%H;else if Ut~=1 then return((HQ+kQ)-l(HQ,kQ))/2;else kQ=kQ%H;end;end;end;end;end;end;local V=(K and K[VW]or function(is,fs)is=is%H;local bs=(0X0001);repeat do if bs==0x0 then return M-B(M-is,M-fs);else do fs=fs%H;end;do bs=0x0;end;end;end;until false;end);local f=K and K.lshift;local R=(K and K.bnot or function(zO)return M-(zO%H);end);local N=(K and K[RW]);cW=0X1;repeat if cW~=0 then f=f or function(O_,m_)local H_=(0X1);while true do do if not(H_<=0X0)then do if H_==1 then if not(m_>=0X000020)then else return 0;end;H_=0x0;else return(O_*v[m_])%H;end;end;else if m_<0X0 then return N(O_,-m_);end;H_=0X02;end;end;end;end;cW=0X000;else N=N or function(uE,TE)if TE>=32 then return 0;end;do if TE<0X0 then return f(uE,-TE);end;end;local iE=((uE%H/v[TE]));do return iE-iE%0X00001;end;end;cW=0X2;end;until cW==0x2;cW=1;local I,h=nil,(nil);do repeat if cW==0X0 then h=function()local XI=(0);local lI=(0);repeat local oA=(x(F,q,q));do q=q+0X0001;end;do XI=V(XI,f(B(oA,127),lI));end;if B(oA,128)~=0 then else return XI;end;lI=lI+7;until false;end;break;else do I=fW;end;cW=0X00000;end;until false;end;local CW=(P());local SW=P();local jW=function(ZU)local DU={x(F,q,q+0X3)};local CU=(l(DU[1],SW));local nU=l(DU[2],SW);local hU,aU=nil,nil;local yU=(0x0);while-1079636878 do if not(yU<=0X001)then if not(yU<=2)then if yU~=0X3 then SW=(0X39*SW+ZU)%256;yU=0X1;else aU=l(DU[0X4],SW);yU=0X0004;end;else return aU*0X01000000+hU*0x10000+nU*0X100+CU;end;else if yU==0 then hU=l(DU[3],SW);yU=0X03;else q=q+0X04;do yU=2;end;end;end;end;end;local r=({[6]=0x1,[5]=6,[7]=0X9,[2]=7,[0X00001]=8,[3]=4,[1]=2,[0x0]=0X7,[0x006]=0x5,[0X9]=1,[7]=8});local c=(function()local IS=(nil);local XS=0X0000;do while true do if XS<=0x0 then IS=h();XS=0X00002;else if XS~=0x1 then if IS>u then return IS-H;end;XS=0X1;else return IS;end;end;end;end;end);local pW,iW={},(0X0001);local gW=(function(qe)local ue=0x3;local Je,he=nil,nil;do while 0.487799895410139 do if not(ue<=0X1)then do if not(ue<=0X2)then if ue==0X3 then Je=d();do ue=4;end;else he="";ue=0;end;else return he;end;end;elseif ue==0X0 then for h0=0X00001,Je,7997 do local I0,j0,z0=1,nil,(nil);do while I0<=0X4 do if I0<=0X0001 then do if I0==0 then if not(j0>Je)then else j0=Je;end;I0=4;else j0=h0+0X1f3d-1;I0=0X0;end;end;else if I0<=0X2 then he=he..b(m(z0));I0=5;else if I0==0X3 then for j8=1,#z0 do local D8=1;while D8<0X2 do do if D8==0 then CW=(qe*CW+45)%0X0000100;do D8=0X2;end;else z0[j8]=l(z0[j8],CW);do D8=0;end;end;end;end;end;do I0=0X2;end;else z0={x(F,q+h0-0X1,q+j0-1)};I0=0x3;end;end;end;end;end;end;ue=1;else q=q+Je;do ue=2;end;end;end;end;end);local S=(assert);local function TW(eC,nC,wC)local NC,PC,SC=eC[0x3],eC[0X05],eC[0X09];local VC,vC,uC,GC=eC[0X6],eC[4],eC[0X8],eC[2];local QC=(eC[0X001]);local ZC=O({},{__mode="v"});local BC=(nil);BC=function(...)local Z_,M_=0x1,{};local y_=(t and t()or _ENV);local H_=((y_==k and wC or y_));local Y_,d_=wW(...);local n_=({[0X1]=M_,[0x2]=eC});Y_=Y_-1;for Wu=0x0,Y_ do if SC>Wu then M_[Wu]=d_[Wu+0X1];else do break;end;end;end;local x_=0X0;if not uC then d_=nil;else if not(GC)then else do M_[SC]={n=Y_>=SC and Y_-SC+1 or 0X0000,m(d_,SC+0x1,Y_+1)};end;end;end;if H_~=y_ then if not(z)then do _ENV=H_;end;else z(BC,H_);end;end;local z_,A_,K_,U_=w(function()repeat local Ea=(NC[Z_]);local Aa=Ea[0X1];Z_=Z_+0X1;if not(Aa<0x2C)then if not(Aa>=66)then if not(Aa>=0X37)then if Aa<49 then if Aa>=0x2E then if Aa<0X0002F then local L0=(Ea[0X3]);local M0,j0=M_[L0]();do if M0 then for UG=1,Ea[5]do(M_)[L0+UG]=j0[UG];end;Z_=Ea[0X0002];end;end;else do if Aa==48 then M_[Ea[0X03]]=M_[Ea[2]]==M_[Ea[0X5]];else M_[Ea[3]][Ea[7]]=M_[Ea[5]];end;end;end;else do if Aa==0X2d then if not(not(M_[Ea[0X02]]<=Ea[0x6]))then else Z_=Ea[3];end;else repeat local N5,T5=ZC,(M_);do if#N5>0 then local kX={};do for e0,a0 in s,N5 do for CC,tC in s,a0 do if tC[1]==T5 and tC[2]>=0X0 then local PO=(tC[0X2]);if not kX[PO]then do(kX)[PO]={T5[PO]};end;end;do(tC)[0X1]=kX[PO];end;tC[0X2]=0X1;end;end;end;end;end;end;until true;return true,Ea[0X003],1;end;end;end;else if Aa>=52 then if not(Aa>=0X00035)then if M_[Ea[0X00002]]==M_[Ea[5]]then Z_=Ea[3];end;else if Aa==54 then local xY=(PC[Ea[0X2]]);local LY=nil;local sY=xY[0X007];local WY=#sY;if not(WY>0)then else LY={};do for n0=0X1,WY do local F0=(sY[n0]);do if F0[0X1]==0 then(LY)[n0-0x1]={M_,F0[0x2]};else(LY)[n0-0X00001]=nC[F0[0X02]];end;end;end;end;(Z)(ZC,LY);end;do(M_)[Ea[3]]=TW(xY,LY,H_);end;else(M_)[Ea[0X03]]=M_[Ea[0X2]]~=M_[Ea[0x0005]];end;end;else if Aa<0X000032 then do(M_)[Ea[0x3]]=false;end;else if Aa~=0x33 then local vH=M_[Ea[0X0002]];local aH=Ea[0x3];(M_)[aH+1]=vH;do(M_)[aH]=vH[Ea[0X6]];end;else(M_)[Ea[3]]=M_[Ea[0x2]]+M_[Ea[0X05]];end;end;end;end;else if Aa>=60 then if Aa>=63 then if not(Aa>=0X40)then do(M_)[Ea[3]]=V(M_[Ea[2]],M_[Ea[0X5]]);end;else if Aa==0X41 then do M_[Ea[3]]=M_[Ea[0X2]]>M_[Ea[0x5]];end;else if M_[Ea[2]]~=Ea[0X0006]then else Z_=Ea[0X03];end;end;end;else if not(Aa<61)then if Aa==62 then if Ea[5]~=0X0049 then(M_)[Ea[3]]=-M_[Ea[2]];else Z_=Z_-1;(NC)[Z_]={[0x1]=68,[2]=(Ea[2]-198),[3]=(Ea[3]-0Xc6)};end;else(M_)[Ea[0X3]]=M_[Ea[0X0002]]>=M_[Ea[0x005]];end;else(M_)[Ea[0x3]]=f(M_[Ea[2]],M_[Ea[0x05]]);end;end;else do if not(Aa>=0x39)then if Aa==56 then if Ea[0X0005]==253 then Z_=Z_-0X0001;do(NC)[Z_]={[0X2]=(Ea[2]-123),[1]=0X39,[0X00003]=(Ea[0x00003]-0X0007b)};end;else repeat local Hd,qd=ZC,(M_);if#Hd>0X0 then local lI={};for UE,ME in s,Hd do for zm,Mm in s,ME do do if not(Mm[1]==qd and Mm[0x2]>=0X0)then else local Xb=Mm[0X002];if not(not lI[Xb])then else lI[Xb]={qd[Xb]};end;do(Mm)[1]=lI[Xb];end;Mm[0x2]=1;end;end;end;end;end;until true;local SP=Ea[3];return false,SP,SP;end;else local We=(Ea[3]);x_=We+Ea[0X2]-1;M_[We](m(M_,We+0x1,x_));x_=We-1;end;else do if Aa>=0X00003a then if Aa~=0X3b then local Ks=(Ea[0X3]);local Rs,Gs=M_[Ks]();if not(Rs)then else Z_=Ea[0X2];(M_)[Ks+0X0003]=Gs;end;else M_[Ea[0X3]]={m({},0X00001,Ea[0X02])};end;else(M_)[Ea[0X3]]=M_[Ea[2]];end;end;end;end;end;end;else if Aa>=77 then do if not(Aa<0X52)then if Aa<85 then if Aa<83 then local Qe=Ea[0X3];local Ne,ve=M_[Qe],((Ea[0X05]-0X00001)*0X32);for XK=1,x_-Qe do(Ne)[ve+XK]=M_[Qe+XK];end;else do if Aa==84 then if not(not(M_[Ea[0x02]]<M_[Ea[5]]))then else Z_=Ea[3];end;else if M_[Ea[2]]==M_[Ea[0x0005]]then else Z_=Ea[3];end;end;end;end;else if not(Aa>=86)then H_[Ea[7]]=M_[Ea[3]];else do if Aa~=87 then local zC=(nC[Ea[2]]);do zC[0x00001][zC[0x2]]=M_[Ea[0X3]];end;else do(M_)[Ea[0x0003]]=M_[Ea[2]]/M_[Ea[5]];end;end;end;end;end;else if not(Aa>=0X4F)then if Aa==0X04E then do M_[Ea[3]]=M_[Ea[0x2]]<M_[Ea[0X05]];end;else local Dy=(Ea[0X00003]);do M_[Dy]=M_[Dy](m(M_,Dy+0X1,x_));end;do x_=Dy;end;end;else if Aa<0x50 then if Ea[0X5]~=187 then repeat local bN,CN,WN=ZC,M_,(Ea[3]);if not(#bN>0)then else local lE=({});for YJ,dJ in s,bN do do for mT,lT in s,dJ do if not(lT[1]==CN and lT[2]>=WN)then else local wu=lT[2];do if not(not lE[wu])then else(lE)[wu]={CN[wu]};end;end;lT[0X00001]=lE[wu];do(lT)[0x2]=1;end;end;end;end;end;end;until true;else do Z_=Z_-0X01;end;(NC)[Z_]={[0x2]=(Ea[2]-85),[1]=0x39,[3]=(Ea[0X3]-85)};end;else if Aa==81 then do M_[Ea[0X3]][M_[Ea[0X0002]]]=M_[Ea[5]];end;else repeat local YV,FV=ZC,(M_);if not(#YV>0X00)then else local ru=({});for uA,SA in s,YV do for BI,jI in s,SA do if jI[0X1]==FV and jI[0x2]>=0 then local WQ=(jI[0X2]);if not ru[WQ]then do ru[WQ]={FV[WQ]};end;end;(jI)[1]=ru[WQ];do jI[2]=0X1;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(Aa>=0X47)then if Aa<68 then do if Aa==0X43 then do if not(M_[Ea[0X2]]<=M_[Ea[0x5]])then else Z_=Ea[0X3];end;end;else repeat local VQ,QQ=ZC,M_;if#VQ>0 then local cr=({});do for WG,bG in s,VQ do for g6,P6 in s,bG do do if P6[0X00001]==QQ and P6[2]>=0 then local Ll=(P6[0X2]);if not(not cr[Ll])then else do(cr)[Ll]={QQ[Ll]};end;end;P6[1]=cr[Ll];P6[2]=1;end;end;end;end;end;end;until true;return false,Ea[0x03],x_;end;end;else do if not(Aa<0X45)then if Aa==70 then if not(not M_[Ea[3]])then else do Z_=Ea[2];end;end;else local B3=Ea[0x3];local w3=(I(function(...)(J)();do for EO,xO,aO,fO,uO,dO,sO,jO,kO,BO in...do(J)(true,{EO,xO,aO,fO,uO,dO,sO,jO,kO,BO});end;end;end));(w3)(M_[B3],M_[B3+1],M_[B3+2]);x_=B3;(M_)[B3]=w3;Z_=Ea[0x00002];end;else if Ea[5]==0XF1 then Z_=Z_-1;(NC)[Z_]={[2]=(Ea[0x0002]-158),[1]=80,[3]=(Ea[0X3]-0X00009E)};else(M_)[Ea[3]]=nil;end;end;end;end;else if not(Aa<74)then if Aa>=75 then if Aa==76 then if not(M_[Ea[0X0002]]<=M_[Ea[5]])then Z_=Ea[3];end;else M_[Ea[3]]=N(M_[Ea[2]],M_[Ea[5]]);end;else(M_)[Ea[3]]=M_[Ea[0X2]]-M_[Ea[0X5]];end;else if Aa<72 then M_[Ea[0X3]]=true;else if Aa~=0X000049 then M_[Ea[3]]=n_[Ea[2]];else(M_)[Ea[0X03]]=M_[Ea[2]]%Ea[6];end;end;end;end;end;end;else if not(Aa<22)then if not(Aa<33)then if Aa<38 then if not(Aa>=35)then if Aa==34 then M_[Ea[0X00003]][M_[Ea[2]]]=Ea[0X6];else do(n_)[Ea[0X02]]=M_[Ea[0X3]];end;end;else if Aa<0X024 then M_[Ea[0X0003]]={};else if Aa~=37 then if Ea[0X5]==0X004E then Z_=Z_-1;do(NC)[Z_]={[0X03]=(Ea[0X3]-0X3),[0x2]=(Ea[0x02]-0X0003),[0X01]=0X029};end;else do for lU=Ea[3],Ea[0X002]do do M_[lU]=nil;end;end;end;end;else local LD=(Ea[2]);M_[Ea[3]]=M_[LD]..M_[LD+0X1];end;end;end;else if not(Aa>=0x29)then if Aa>=0X27 then if Aa~=0X28 then do(M_)[Ea[0x03]]=l(M_[Ea[2]],M_[Ea[0X5]]);end;else(M_)[Ea[0x03]]=H_[Ea[7]];end;else pW[Ea[2]]=M_[Ea[0X3]];end;else if not(Aa>=42)then do M_[Ea[0X3]]=#M_[Ea[2]];end;else do if Aa~=0X00002B then do if Ea[5]==150 then Z_=Z_-1;NC[Z_]={[2]=(Ea[0X002]-84),[1]=0X0042,[0X003]=(Ea[0X03]-0X54)};elseif Ea[5]==144 then Z_=Z_-0X0001;do NC[Z_]={[0X01]=0X050,[2]=(Ea[2]-203),[0X0003]=(Ea[3]-0X000CB)};end;elseif Ea[0X5]==77 then do Z_=Z_-1;end;NC[Z_]={[1]=0x0003e,[3]=(Ea[3]-0X77),[0X002]=(Ea[0X02]-119)};else if M_[Ea[3]]then do Z_=Ea[0X2];end;end;end;end;else Z_=Ea[0X2];end;end;end;end;end;else if Aa<27 then do if not(Aa<24)then if Aa>=0X19 then if Aa==26 then M_[Ea[0X3]]=M_[Ea[2]]*M_[Ea[5]];else do M_[Ea[0x00003]]=M_[Ea[0X2]]%M_[Ea[0X5]];end;end;else local hw=Ea[3];local Ow=I(function(...)(J)();do for eH,bH in...do(J)(true,eH,bH);end;end;end);Ow(M_[hw],M_[hw+1],M_[hw+0X2]);x_=hw;(M_)[hw]=Ow;Z_=Ea[2];end;else if Aa~=0X17 then M_[Ea[3]][Ea[0X00007]]=Ea[6];else M_[Ea[3]]=Ea[0X7];end;end;end;else if Aa<0x1e then if not(Aa<28)then if Aa~=29 then do M_[Ea[0X3]]=not M_[Ea[0X2]];end;else M_[Ea[0X03]]=R(M_[Ea[0X2]]);end;else(M_)[Ea[0x3]]=M_[Ea[0X2]]~=Ea[0X06];end;else do if not(Aa>=31)then local ca=Ea[3];(M_[ca])(M_[ca+0X01],M_[ca+2]);x_=ca-0X1;else if Aa==32 then local WR=(nC[Ea[2]]);(M_)[Ea[3]]=WR[0X1][WR[2]];else local M4=Ea[3];do x_=M4+Ea[2]-1;end;do M_[M4]=M_[M4](m(M_,M4+0X01,x_));end;do x_=M4;end;end;end;end;end;end;end;else if not(Aa<11)then if not(Aa<16)then if Aa<0X13 then do if Aa<0X11 then M_[Ea[0X3]]=M_[Ea[2]][Ea[0x6]];else if Aa~=18 then do(M_)[Ea[3]]=M_[Ea[0X2]]<=M_[Ea[0X5]];end;else local E9=Ea[3];local L9,u9=M_[E9]();if not(L9)then else M_[E9+0X0001]=u9;do Z_=Ea[2];end;end;end;end;end;else if Aa<20 then x_=Ea[3];(M_[x_])();do x_=x_-1;end;else if Aa==0x000015 then local W4=Ea[3];M_[W4](M_[W4+1]);x_=W4-1;else local wn=Ea[0X3];(M_)[wn]=M_[wn](M_[wn+0X01],M_[wn+2]);x_=wn;end;end;end;else if not(Aa>=0XD)then if Aa==0XC then local ps=Ea[0x3];local Ks=((Ea[5]-1)*50);local Zs=M_[ps];for ky=1,Ea[2]do Zs[Ks+ky]=M_[ps+ky];end;else do if Ea[0X5]==210 then Z_=Z_-0X1;(NC)[Z_]={[0x3]=(Ea[0x3]-96),[2]=(Ea[0X00002]-0X00060),[0X1]=57};elseif Ea[0X5]==0X34 then do Z_=Z_-0X00001;end;(NC)[Z_]={[1]=7,[3]=(Ea[3]-0x000038),[0X2]=(Ea[0X002]-0X38)};else(M_)[Ea[0x3]]=d_[SC+1];end;end;end;else if not(Aa<0xE)then if Aa==15 then local yu=(Ea[0X2]);local Bu=M_[yu];for rZ=yu+0X001,Ea[0x00005]do Bu=Bu..M_[rZ];end;M_[Ea[3]]=Bu;else do(M_)[Ea[3]]=M_[Ea[2]]^M_[Ea[0X5]];end;end;else local Md=(Ea[3]);do M_[Md]=M_[Md](M_[Md+1]);end;x_=Md;end;end;end;else if Aa<5 then do if not(Aa<2)then if not(Aa>=0X3)then M_[Ea[0X3]]=M_[Ea[0X2]][M_[Ea[5]]];else if Aa==4 then M_[Ea[0x00003]]=pW[Ea[2]];else local h5=(Ea[0x3]);local S5=I(function(...)(J)();for Sb in...do J(true,Sb);end;end);S5(M_[h5],M_[h5+1],M_[h5+0X0002]);do x_=h5;end;(M_)[h5]=S5;Z_=Ea[0X0002];end;end;else do if Aa~=0x00001 then local UI=Ea[3];local KI=(Ea[2]);if KI==0 then else x_=UI+KI-1;end;local iI=(Ea[0X05]);local BI,PI=nil,(nil);if KI==1 then BI,PI=wW(M_[UI]());else do BI,PI=wW(M_[UI](m(M_,UI+1,x_)));end;end;do if iI~=0X001 then if iI~=0 then BI=UI+iI-2;x_=BI+0X1;else do BI=BI+UI-1;end;x_=BI;end;local w0=(0);do for Ni=UI,BI do w0=w0+0X1;(M_)[Ni]=PI[w0];end;end;else x_=UI-0X1;end;end;else do repeat local BP,YP=ZC,(M_);if#BP>0x0 then local kP={};for qU,SU in s,BP do for Gz,Jz in s,SU do if not(Jz[0X0001]==YP and Jz[0X02]>=0)then else local Af=(Jz[0X02]);do if not(not kP[Af])then else(kP)[Af]={YP[Af]};end;end;(Jz)[1]=kP[Af];Jz[0X2]=1;end;end;end;end;until true;end;return true,Ea[3],0;end;end;end;end;else if not(Aa<0X8)then if Aa<9 then local rB,pB=Ea[3],(Y_-SC);do if not(pB<0X0)then else pB=-0X1;end;end;for g8=rB,rB+pB do M_[g8]=d_[SC+(g8-rB)+1];end;x_=rB+pB;else if Aa==10 then local T5=(Ea[0X0003]);local w5=M_[T5+0x0002];local m5=(M_[T5]);local M5=(M_[T5+0x0001]);M_[T5]=I(function()do for oU=m5,M5,w5 do J(true,oU);end;end;end);Z_=Ea[2];else local AX=Ea[0X03];(M_[AX])(m(M_,AX+1,x_));x_=AX-1;end;end;else if Aa>=6 then if Aa==0x7 then repeat local nU,ZU=ZC,M_;do if not(#nU>0X000)then else local xZ=({});for ia,Ma in s,nU do do for rn,an in s,Ma do if not(an[0X1]==ZU and an[0X2]>=0X0)then else local fp=(an[2]);do if not xZ[fp]then do(xZ)[fp]={ZU[fp]};end;end;end;(an)[1]=xZ[fp];(an)[2]=1;end;end;end;end;end;end;until true;local ob=Ea[3];return false,ob,ob+Ea[2]-2;else local aE=(Ea[0X3]);local BE,UE,VE=M_[aE]();do if BE then(M_)[aE+1]=UE;M_[aE+0x02]=VE;Z_=Ea[2];end;end;end;else if M_[Ea[0X00002]]~=Ea[6]then Z_=Ea[0x03];end;end;end;end;end;end;end;until false;end);do if not(z_)then if X(A_)=='\115\116r\105\110\103'then if e(A_,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if e(A_,"^.-:%d+: ")then(p)("Luraph Script:"..(vC[Z_-0X1]or"\040\105\110te\114na\108\041").."\058\032"..i(A_),0X00);else p(A_,0X0);end;else(p)(A_,0);end;else do if A_ then if U_==0X00001 then return M_[K_]();else return M_[K_](m(M_,K_+1,x_));end;else if K_ then return m(M_,K_,U_);end;end;end;end;end;end;if not(z)then else(z)(BC,wC);end;do return BC;end;end;cW=0X4;local xW,bW=nil,(nil);do while'\115\109g\074'do if cW<=0x0001 then if cW~=0 then return TW(bW,NW,k)(...);else pW[0x1]=XW;cW=2;end;elseif not(cW<=0X2)then if cW~=0X03 then function xW()local vp=nil;for Ox=0X0,0X1 do if Ox==0X0 then else vp={};end;end;local yp={NW,nil,{},{},{},NW,nil,NW,nil};do(yp)[0X001]=h();end;local rp=7;local Sp,sp=nil,(nil);do while rp<8 do if not(rp<=3)then do if not(rp<=5)then if rp==6 then(yp)[11]=d();rp=0X4;else yp[16]=d();do rp=1;end;end;else do if rp~=0X4 then do(yp)[2]=U(sp,0x2,0X1)~=0X000;end;rp=0x2;else yp[0X6]=h();rp=8;end;end;end;end;else if rp<=0X1 then do if rp==0X0 then do sp=P();end;rp=3;else Sp={};do rp=0;end;end;end;else if rp~=2 then(yp)[0X8]=U(sp,0X001,ZW)~=0X0;do rp=5;end;else yp[HW]=d();rp=0X6;end;end;end;end;end;rp=0X0;local Mp,Lp=nil,(nil);while(true)do if rp==0 then Mp=d()-0X13D3E;rp=1;else do Lp=yp[0x3];end;break;end;end;local Xp=(0x1);for qe=0X1,Mp do Lp[qe]={[4]=P(),[6]=P(),[0X01]=h(),[2]=c(),[0X7]=P(),[5]=c(),[0X03]=c()};end;do yp[13]=d();end;do(yp)[0X12]=d();end;local gp=(d()-0X0000BE8C);local Tp=yp[0X05];do rp=0;end;do while rp<=3 do if not(rp<=0x001)then if rp==0X2 then yp[0XE]=P();rp=4;else do(yp)[FW]=Sp;end;rp=1;end;else do if rp~=0 then for Hy=0X001,h()do do Sp[Hy]={P(),h()};end;end;rp=0X00002;else for AS=0,gp-0x1 do Tp[AS]=xW();end;rp=3;end;end;end;end;end;rp=1;local Bp=nil;while rp~=0x2 do do if rp==0X0 then Bp=d();rp=0x02;else(yp)[yW]=h();rp=0;end;end;end;rp=3;local kp=(nil);while(true)do do if rp<=1 then if rp==0X0000 then do yp[18]=d();end;rp=1;else do yp[11]=P();end;break;end;else do if rp~=0X0002 then kp={};rp=0X2;else for QS=1,Bp do local xS=d();local ZS=d();local aS,GS=1,(nil);repeat if aS==0 then for dV=xS,ZS do yp[4][dV]=GS;end;do aS=0X02;end;else GS=d();aS=0;end;until aS>0x1;end;do rp=0X0;end;end;end;end;end;end;local ip,Op,Hp=nil,nil,(nil);for UX=0,6 do if not(UX<=0X2)then do if UX<=0X4 then do if UX==3 then Hp=P()~=0;else for bp=0X0001,ip do local Jp,Np,Pp=0X0,nil,nil;do repeat if Jp<=0X01 then if Jp==0 then Np=nil;do Jp=0x0002;end;else if Pp==0X000052 then Np=D();elseif Pp==49 then Np=D()+d();elseif Pp==0X89 then Np=T(gW(Op),0X00004);elseif Pp==225 then Np=T(gW(Op),d());elseif Pp==22 then Np=d();elseif Pp==LW then Np=D()+d();elseif Pp==129 then Np=T(gW(Op),17);elseif Pp==0X0000fF then do Np=rW;end;elseif Pp==0xd3 then do Np=T(gW(Op),P());end;elseif Pp==0X20 then Np=hW;elseif Pp==0X54 then Np=o();end;Jp=0X4;end;else if Jp==2 then do Pp=P();end;Jp=3;else do vp[bp-1]=Xp;end;Jp=0X0001;end;end;until Jp>0X3;end;local op={Np,{}};Jp=0;do while Jp~=3 do if not(Jp<=0X0)then if Jp==1 then Xp=Xp+1;do Jp=0X2;end;else do if Hp then local k1=(0X0000);while(true)do do if k1==0 then do XW[iW]=op;end;k1=1;else iW=iW+0x1;break;end;end;end;end;end;Jp=3;end;else do(kp)[Xp]=op;end;do Jp=0X00001;end;end;end;end;end;end;end;else do if UX~=0X0005 then yp[0x000F]=d();else for UB=0X1,Mp do local FB=(0);local MB=(nil);while FB<0x2 do do if FB==0 then MB=yp[0x3][UB];FB=0x1;else for LM,sM in ipairs(L)do local OM=(0x0);local oM,MM=nil,nil;repeat do if not(OM<=0x000)then if OM~=0X00001 then do MM=MB[oM];end;OM=0x1;else if MM==7 then local Ud=vp[MB[sM]];local ud=kp[Ud];if ud then local Nu=(nil);local gu=0X00000;repeat do if gu==0X0 then(MB)[oM]=ud[1];do gu=1;end;else Nu=ud[0X2];gu=2;end;end;until gu>0X00001;(Nu)[#Nu+0x1]={MB,oM};end;elseif MM==WW then do(MB)[sM]=UB+MB[sM]+1;end;end;OM=0X3;end;else do oM=r[sM];end;OM=2;end;end;until OM>=3;end;FB=2;end;end;end;end;end;end;end;end;else if not(UX<=0)then if UX~=1 then Op=P();else do ip=d()-92954;end;end;else do yp[11]=P();end;end;end;end;do(yp)[16]=d();end;return yp;end;do cW=3;end;else bW=xW();cW=0X0000;end;else XW=nil;cW=1;end;end;end;end)(11,bit,nil,14,'r\115\104if\116',4,13,_ENV,0X00009,table,rawset,string.byte,false,coroutine.wrap,0Xf,unpack,3,'\098\097\110d',string,2,pcall,0xA,0,0x001,tostring,7,string.match,0X7Ff,0XC,true,tonumber,setmetatable,16,select,152,bit32,next,"\098\111\114",table.unpack,6,{0Xa6d1,2524624336,2678368277,0X7fc978Eb,0xAd2AF33b,0x0069626A92,2159069545,390236121,425759244},...);
